#!/usr/bin/env node
"use strict"

function defer(opts){
	if( !(this instanceof defer)){
		return new defer( opts)
	}
	this.promise = new Promise(( resolve, reject)=> Object.assign(this, {resolve, reject}))
}
Promise.defer= defer

var
  dbus= require( "dbus-native"),
  hello= require( "./msg/hello"),
  List= require( "./List")

function connect( busAddress){
	var
	  conn= dbus.createConnection( busAddress? {busAddress}: undefined)
	conn.message( hello())
	return conn
}

function main( destination, busAddress, startPath){
	destination= destination|| process.argv[2]|| "org.freedesktop.DBus"
	busAddress= busAddress|| process.argv[3]|| undefined
	startPath= startPath|| process.argv[4]
	var
	  conn= connect( busAddress),
	  l= List( conn, destination, startPath)
	l.then( JSON.stringify).then( console.log, console.error)
}

module.exports= main
module.exports.main= main
module.exports.connect= connect

if(require.main=== module){
	module.exports.main()
}
